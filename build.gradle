apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'

// Project variables:
def projectName = 'corlib'
def projectGroupId = 'com.stclair'
def projectVersion = '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_10
targetCompatibility = JavaVersion.VERSION_1_10

// Gradle variables:
group = projectGroupId
version = projectVersion
archivesBaseName = projectName

sourceSets.main.java.srcDirs = [ 'src/main/java' ]

jar.doFirst {
    def manifestClassPath = configurations.runtime.collect {
        "lib/${it.getName()}"
    }.join(' ')
}

repositories {
   mavenLocal()
   mavenCentral()
   maven {
      url "https://oss.sonatype.org/content/groups/public/"
   }
}


def versions = [
   junit: '4.10',
]


dependencies {

    compile "org.apfloat:apfloat:1.8.3"
    testCompile "junit:junit:${versions.junit}"
}

// Allow for running integration and unit tests as separate tasks.
// Just running 'gradle test', for safety, will still be all-inclusive.
task unitTest(type: Test) {
   exclude '**/*Integration*.*'
}

task integrationTest(type: Test) {
   include '**/*Integration*.*'
}

configurations {
    provided
    testCompile.extendsFrom provided
    compile.transitive = true
}

task listJars {
    doLast
        {
        configurations.compile.each { File file -> println file.name }
    }
}

jar {
   from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
   from configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
}

//////////////////////////////////////////////////////////////////////
// managing the 'dist' folder which contains our distributable files
//
task deleteDeploy(type:Delete) {
    delete 'dist'
}

clean.dependsOn deleteDeploy

build.doLast {
    // copying everything needed into deploy folder
    copy {
        from jar.archivePath
        into 'dist'
    }
    copy {
        from configurations.compile
        into 'dist/lib'
    }
}



// Added the provided dependency to compile classpath
sourceSets.main.compileClasspath += configurations.provided


uploadArchives {
    repositories {
    }
}


